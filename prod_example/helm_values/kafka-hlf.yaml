## The StatefulSet installs 3 pods by default
replicas: 4

## The kafka image repository
image: "confluentinc/cp-kafka"

## The kafka image tag
imageTag: "4.1.1-2"

## If RBAC is enabled on the cluster, the Kafka init container needs a service account
## with permissisions sufficient to apply pod labels
rbac:
  enabled: true

## Pod scheduling preferences (by default keep pods within a release on separate nodes).
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - topologyKey: "kubernetes.io/hostname"
        labelSelector:
          matchLabels:
            app: kafka
            release: kafka-hlf
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
     - weight: 50
       podAffinityTerm:
         topologyKey: "kubernetes.io/hostname"
         labelSelector:
           matchLabels:
             app: zookeeper
             release: kafka-hlf

## Configuration Overrides. Specify any Kafka settings you would like set on the StatefulSet
## here in map format, as defined in the official docs.
## ref: https://kafka.apache.org/documentation/#brokerconfigs
##
configurationOverrides:
  "offsets.topic.replication.factor": 3
  # "auto.leader.rebalance.enable": true
  # "controlled.shutdown.enable": true
  # "controlled.shutdown.max.retries": 100
  "auto.create.topics.enable": true # Useful to enable the Node.js client to create topics as required

  # NOTE: The below are required for Hyperledger Fabric orderer to work (but last one is problematic for normal setups - best to keep separate Kafka clusters for logs/HLF)
  "default.replication.factor": 3
  "unclean.leader.election.enable": false
  "min.insync.replicas": 2
  "message.max.bytes": "103809024"  # 99 * 1024 * 1024 B
  "replica.fetch.max.bytes": "103809024"  # 99 * 1024 * 1024 B
  "log.retention.ms": -1  # This should be only used for the HL Fabric Orderer (which needs to keep all logs)

## Persistence configuration. Specify if and how to persist data to a persistent volume.
persistence:
  enabled: true

  ## The size of the PersistentVolume to allocate to each Kafka Pod in the StatefulSet
  size: "1Gi"

## Prometheus Exporters / Metrics
prometheus:
  ## Prometheus JMX Exporter: exposes the majority of Kafkas metrics
  jmx:
    enabled: true

  ## Prometheus Kafka Exporter: exposes complimentary metrics to JMX Exporter
  kafka:
    enabled: true

# ------------------------------------------------------------------------------
# Zookeeper:
# ------------------------------------------------------------------------------
zookeeper:
  ## If true, install the Zookeeper chart alongside Kafka
  ## ref: https://github.com/kubernetes/charts/tree/master/incubator/zookeeper
  enabled: true

  ## Explicitly set the number of replicas of Zookeeper
  replicaCount: 3

  ## Configure Zookeeper resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources: ~

  ## The JVM heap size to allocate to Zookeeper
  env:
    ZK_HEAP_SIZE: "1G"

  persistence:
    enabled: true
    ## The amount of PV storage allocated to each Zookeeper pod in the statefulset
    size: "1Gi"

  ## Pod scheduling preferences (by default keep pods within a release on separate nodes).
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity:  # Criteria by which pod label-values influence scheduling for zookeeper pods.
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:
              app: zookeeper
              release: kafka-hlf
